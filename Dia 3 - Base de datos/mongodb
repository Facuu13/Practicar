
Abrí la shell de MongoDB (mongosh) y creá la DB:

use greenhouse

ingresar datos

db.readings.insertMany([
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T10:00:00Z"), temp_c: 22.5, hum_pct: 45.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T11:00:00Z"), temp_c: 23.0, hum_pct: 50.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T12:00:00Z"), temp_c: 24.0, hum_pct: 55.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T13:00:00Z"), temp_c: 25.5, hum_pct: 60.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T14:00:00Z"), temp_c: 26.0, hum_pct: 65.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T15:00:00Z"), temp_c: 27.0, hum_pct: 70.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T16:00:00Z"), temp_c: 28.5, hum_pct: 75.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T17:00:00Z"), temp_c: 29.0, hum_pct: 80.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T18:00:00Z"), temp_c: 30.0, hum_pct: 85.0 },
  { device_id: "dev001", ts_utc: ISODate("2024-06-01T12:00:00Z"), temp_c: 24.0, hum_pct: 55.0 }
  ])

Consultar las últimas 5 lecturas de dev001
db.readings.find({ device_id: "dev001" }).sort({ ts_utc: -1 }).limit(5)

Promedio de temperatura y humedad
db.readings.aggregate([
  { $match: { device_id: "dev001" } },
  { $group: {
      _id: "$device_id",
      avg_temp_c: { $avg: "$temp_c" },
      avg_hum_pct: { $avg: "$hum_pct" }
    }
  }
]);

Máxima temperatura registrada y en qué timestamp
db.readings.find({ device_id: "dev001" }).sort({ temp_c: -1 }).limit(1)

Cantidad total de lecturas de un device
db.readings.countDocuments({ device_id: "dev001" })

Lecturas con humedad mayor o igual a 70%
db.readings.find({ device_id: "dev001", hum_pct: { $gte: 70.0 } })

Promedio de temperatura solo en lecturas con humedad > 70%
db.readings.aggregate([
  { $match: { device_id: "dev001", hum_pct: { $gt: 70.0 } } },
  { $group: {
      _id: "$device_id",
      avg_temp_c: { $avg: "$temp_c" }
    }
  }
]);